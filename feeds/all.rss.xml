<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>visibilityspots</title><link>https://visibilityspots.github.io/blog/</link><description>Linux &amp; Open-Source enthusiast | Scouting | Longboarding</description><lastBuildDate>Thu, 25 Aug 2022 00:00:00 +0200</lastBuildDate><item><title>Traefik SSL grading</title><link>https://visibilityspots.github.io/blog/traefik-ssl-grading.html</link><description>&lt;p&gt;Recently I discovered that many of the services I deployed upon my &lt;a href="https://visibilityspots.github.io/blog/nomad-arm-cluster.html"&gt;nomad cluster&lt;/a&gt;  didn't had the SSL A grading I expected them to have. Somehow I asumed the &lt;a href="https://visibilityspots.github.io/blog/traefik-nomad-route53.html"&gt;traefik letsencrypt&lt;/a&gt; implementation got the A rating by default.&lt;/p&gt;
&lt;p&gt;After running the &lt;a href="https://github.com/drwetter/testssl.sh"&gt;testssl.sh&lt;/a&gt; container it turns out they don't;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;--rm&lt;span class="w"&gt; &lt;/span&gt;-ti&lt;span class="w"&gt; &lt;/span&gt;drwetter/testssl.sh&lt;span class="w"&gt; &lt;/span&gt;domain.org
&lt;span class="w"&gt; &lt;/span&gt;Rating&lt;span class="w"&gt; &lt;/span&gt;specs&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;complete&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;SSL&lt;span class="w"&gt; &lt;/span&gt;Labs&lt;span class="s1"&gt;&amp;#39;s &amp;#39;&lt;/span&gt;SSL&lt;span class="w"&gt; &lt;/span&gt;Server&lt;span class="w"&gt; &lt;/span&gt;Rating&lt;span class="w"&gt; &lt;/span&gt;Guide&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;2009q&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2020&lt;/span&gt;-01-30&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;Specification&lt;span class="w"&gt; &lt;/span&gt;documentation&lt;span class="w"&gt;  &lt;/span&gt;https://github.com/ssllabs/research/wiki/SSL-Server-Rating-Guide
&lt;span class="w"&gt; &lt;/span&gt;Protocol&lt;span class="w"&gt; &lt;/span&gt;Support&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;weighted&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;95&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;Key&lt;span class="w"&gt; &lt;/span&gt;Exchange&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;weighted&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;Cipher&lt;span class="w"&gt; &lt;/span&gt;Strength&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;weighted&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;90&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;36&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;Final&lt;span class="w"&gt; &lt;/span&gt;Score …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 20 Aug 2022 12:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2022-08-20:/blog/traefik-ssl-grading.html</guid><category>containers</category><category>traefik</category><category>ssl</category><category>https</category><category>grading</category><category>testssl</category><category>qualys</category><category>ssllabs</category><category>labs</category><category>a</category><category>b</category></item><item><title>Traefik nomad route53 setup</title><link>https://visibilityspots.github.io/blog/traefik-nomad-route53.html</link><description>&lt;p&gt;I have this &lt;a href="https://nomadproject.io"&gt;nomad&lt;/a&gt; cluster running on some spare devices for a while now. Serving my &lt;a href="https://visibilityspots.github.io/blog/planespotting.html"&gt;plane spotting&lt;/a&gt; setup, &lt;a href="https://visibilityspots.github.io/blog/dockerized-cloudflared-pi-hole.html"&gt;dns&lt;/a&gt; setup, mqtt bridge and some other services I experiment with throughout the years. Until today I've always relied on the ip addresses to point my browser and other services towards the different services. For my DNS setup I even had to pin the jobs towards specific hardware using &lt;a href="https://www.nomadproject.io/docs/configuration/client#custom-metadata-network-speed-and-node-class"&gt;meta&lt;/a&gt; data.&lt;/p&gt;
&lt;p&gt;But I've always wanted to implement a proxy in between so I could rely on DNS names instead. This would also increase the flexibility of my DNS setup since for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sun, 27 Dec 2020 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2020-12-27:/blog/traefik-nomad-route53.html</guid><category>containers</category><category>traefik</category><category>proxy</category><category>nomad</category><category>containers</category><category>route53</category></item><item><title>Plane spotting on a nomad cluster</title><link>https://visibilityspots.github.io/blog/planespotting.html</link><description>&lt;p&gt;Some weeks ago I upgraded my plane spotting setup by moving my antenna to the &lt;a href="https://visibilityspots.github.io/blog/piaware.html"&gt;roof&lt;/a&gt;. It was worth every single effort I've made into it. My stats are rocking ever since. Until the corona crisis halted almost every airline to standstill..&lt;/p&gt;
&lt;p&gt;It gave me some time to thinker about my setup, and for some weird coincidence &lt;a href="https://github.com/mikenye"&gt;Mike&lt;/a&gt; did create a series of docker containers like I was thinking about to implement. I have one pi connected to the USB device which captures the ADB radio signals.&lt;/p&gt;
&lt;p&gt;But in the current situation it also feeds the flightaware service since I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 31 Mar 2020 21:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2020-03-31:/blog/planespotting.html</guid><category>other</category><category>piaware</category><category>flightaware</category><category>dump1090</category><category>ADB-B</category><category>nomad</category><category>docker</category><category>flight</category><category>radar</category><category>24</category><category>flightradar24</category><category>DVB-T</category><category>readsb</category><category>radarbox</category><category>planefinder</category><category>adsbexchange</category></item><item><title>Httpd semaphores</title><link>https://visibilityspots.github.io/blog/httpd-semaphores.html</link><description>&lt;p&gt;Recently we encountered some strange issues with httpd on some of our CentOS 7 machines during my current project.&lt;/p&gt;
&lt;p&gt;Through our pipeline we restart httpd several times which sometimes leads to this error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;Apache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;No&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;space&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;left&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After some research we found out the semaphores were all being used blocking httpd daemon to restart.&lt;/p&gt;
&lt;p&gt;The list of semaphores can be fetched by issuing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# ipcs -st

------ Semaphore Operation/Change Times --------
semid    owner      last-op                    last-changed
753664   apache      Not set                    Mon Feb 17 20:20:47 2020
786433   apache      Not set                    Mon Feb 17 20:20:47 2020
720898 …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 09 Mar 2020 19:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2020-03-09:/blog/httpd-semaphores.html</guid><category>linux</category><category>apache</category><category>httpd</category><category>semaphores</category><category>error</category><category>no</category><category>space</category><category>left</category><category>on</category><category>device</category></item><item><title>Piaware on a nomad cluster</title><link>https://visibilityspots.github.io/blog/piaware.html</link><description>&lt;p&gt;A couple of years ago I stumbled on the &lt;a href="https://flightaware.com/"&gt;flightaware&lt;/a&gt; website and figured out you could capture radio signals from an airplane using a DVB-T dongle which can be bought for about EUR 15.&lt;/p&gt;
&lt;p&gt;As this really triggered me to start monitoring planes above our head I bought myself such a device, hooked it up to a raspberry pi zero, installed the piaware software and started grabbing the messages and pushing the compiled positions through flightaware.&lt;/p&gt;
&lt;p&gt;Through time I managed to upgrade my home lab towards a &lt;a href="../nomad-arm-cluster.html"&gt;nomad cluster&lt;/a&gt;. So I migrated my piaware setup to a nomad node and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 31 Jan 2020 19:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2020-01-31:/blog/piaware.html</guid><category>other</category><category>piaware</category><category>flightaware</category><category>dump1090</category><category>ADB-B</category><category>nomad</category><category>docker</category><category>flight</category><category>radar</category><category>24</category><category>flightradar24</category><category>DVB-T</category><category>readsb</category><category>radarbox</category><category>planefinder</category><category>adsbexchange</category></item><item><title>Nomad ARM cluster</title><link>https://visibilityspots.github.io/blog/nomad-arm-cluster.html</link><description>&lt;p&gt;as I already mentioned a few times before I have some hands on experiences with &lt;a href="https://nomadproject.io"&gt;nomad&lt;/a&gt;. A couple of weeks ago I wrote about a &lt;a href="../nomad-local-development.html"&gt;local development&lt;/a&gt; setup based on nomad.&lt;/p&gt;
&lt;p&gt;Since quite some time I do have a thinclient which is running some docker containers through a docker-compose file I use for personal stuff at home. But this thinclient is suffering from all the containers I'm trying to spin up. While over thinking this issue I did realize I have quite some raspberry pi's laying around and figured I could maybe set up a cluster for those containers.&lt;/p&gt;
&lt;p&gt;Since …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 28 Aug 2019 21:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2019-08-28:/blog/nomad-arm-cluster.html</guid><category>containers</category><category>nomad</category><category>arm</category><category>cluster</category><category>consul</category><category>raspberry</category><category>pi</category><category>thin</category><category>client</category><category>thinclient</category><category>docker</category><category>home</category><category>lab</category><category>homelab</category></item><item><title>ArchLinux on intel compute stick</title><link>https://visibilityspots.github.io/blog/compute-sticks.html</link><description>&lt;p&gt;A few months ago we moved into a brand new office which was furnished with a dozen of samsung displays. Unfortunately the basic player included in those displays isn't capable to add a webpage/url as content. Since we've setted up a &lt;a href="https://smashing.github.io/"&gt;smashing&lt;/a&gt; instance to create dashboards for each team this was a huge bummer.&lt;/p&gt;
&lt;p&gt;While looking for a stable solution many teams brought their own raspberry pi's, chromecasts, airtame devices to at least be able to show something on the displays in the meanwhile.&lt;/p&gt;
&lt;p&gt;Since we already had good experiences with an intel compute stick and an intel NUC …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 24 Jun 2019 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2019-06-24:/blog/compute-sticks.html</guid><category>linux</category><category>ArchLinux</category><category>archlinux</category><category>arch</category><category>linux</category><category>intel</category><category>compute</category><category>stick</category><category>sticks</category><category>STK1A32SC</category></item><item><title>Nomad local development</title><link>https://visibilityspots.github.io/blog/nomad-local-development.html</link><description>&lt;p&gt;Been using &lt;a href="https://www.nomadproject.io/"&gt;nomad&lt;/a&gt; for a few years now at the customer I got the question couple of weeks ago from some &lt;a href="https://inuits.eu/team/"&gt;colleagues&lt;/a&gt; if nomad could be used to replace docker-compose.&lt;/p&gt;
&lt;p&gt;The reason behind the question is mainly to not vendor lock yourself for local development with the whole docker eco system.&lt;/p&gt;
&lt;p&gt;Since I like a certain level of challenge and I do believe it's a valid use case I gave it a try.&lt;/p&gt;
&lt;p&gt;This resulted in a &lt;a href="https://github.com/visibilityspots/nomad-local-development"&gt;nomad-local-development&lt;/a&gt; repository. The 2 major hurdles to take where to use one file like docker-compose.yml and dns resolving between the containers.&lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 14 May 2019 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2019-05-14:/blog/nomad-local-development.html</guid><category>containers</category><category>nomad</category><category>local</category><category>development</category><category>alternative</category><category>docker</category><category>docker-compose</category></item><item><title>BIOS upgrade lenovo archlinux</title><link>https://visibilityspots.github.io/blog/bios-upgrade-lenovo.html</link><description>&lt;p&gt;I got some issues with my wired connection lately that the speed wasn't negotiated correctly and it felt back to 10Mb/s as default.&lt;/p&gt;
&lt;p&gt;Did some troubleshooting by eliminating various network devices, restarting them but the results didn't satisfy. Being completely random when and when not auto negotiated.&lt;/p&gt;
&lt;p&gt;Before becoming insane I decided to update the bios of my machine (being a lenovo T460s).&lt;/p&gt;
&lt;p&gt;I did this already in the past and talked about it even on one of our monthly last Friday's at &lt;a href="https://inuits.eu"&gt;work&lt;/a&gt;. So I was quite sure I had something written about it for future reference but …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 04 May 2019 23:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2019-05-04:/blog/bios-upgrade-lenovo.html</guid><category>linux</category><category>linux</category><category>archlinux</category><category>bios</category><category>BIOS</category><category>upgrade</category><category>lenovo</category></item><item><title>Archlinux ARM pi zero cups network print server</title><link>https://visibilityspots.github.io/blog/print-server.html</link><description>&lt;h2&gt;Printing&lt;/h2&gt;
&lt;p&gt;Probably like many amongst us the time of the Christmas holidays is perfect to get some IT related stuff back on track. I used to have a print server setup which got broken over time and I didn't found the energy to invest time into fixing it. But the pressure became higher and higher.
111
From both my wife and daughter, especially during the holidays where the wife want to use it to print out tickets and the daughter want to print out color plates..&lt;/p&gt;
&lt;p&gt;So during one of the evenings I pulled myself together and installed &lt;a href="https://archlinuxarm.org/"&gt;ArchLinux ARM …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 26 Dec 2018 19:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2018-12-26:/blog/print-server.html</guid><category>linux</category><category>cups</category><category>pi</category><category>zero</category><category>w</category><category>print</category><category>server</category><category>archlinux</category><category>arm</category><category>sane</category><category>scan</category><category>remote</category><category>scanimage</category><category>hp</category><category>samsung</category></item><item><title>Ansible-playbook archlinux upgrade</title><link>https://visibilityspots.github.io/blog/ansible-archlinux-upgrade.html</link><description>&lt;p&gt;Since a few years now I'm a happy &lt;a href="https://www.archlinux.org/"&gt;Archlinux&lt;/a&gt; user. I like their &lt;a href="https://wiki.archlinux.org/index.php/Arch_Linux"&gt;philosophy&lt;/a&gt; which was one of the major points why I made the switch back in the days.&lt;/p&gt;
&lt;p&gt;I'm not only using it on my laptop, but do have some devices running at home which are configured with it. From a thin client which I use as a docker node through some raspberry pies running &lt;a href="https://archlinuxarm.org/"&gt;ArchlinuxARM&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since Arch is a rolling update distro there are several updates available throughout the day. To keep on top of them I had to log in on all those devices at least …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 06 Aug 2018 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2018-08-06:/blog/ansible-archlinux-upgrade.html</guid><category>linux</category><category>ansible</category><category>playbook</category><category>ansible-playbook</category><category>archlinux</category><category>aur</category><category>aurman</category><category>update</category><category>upgrade</category><category>ansible-aur</category><category>pacman</category></item><item><title>Prometheus export/import</title><link>https://visibilityspots.github.io/blog/prometheus-export-import.html</link><description>&lt;p&gt;bumping into the case where once deployed a full stack application we don't have any direct connection due to no uplink for security reasons.&lt;/p&gt;
&lt;p&gt;So we (you too &lt;a href="https://twitter.com/TomVanHumbeeck"&gt;@Tom&lt;/a&gt;) looked into a way to export the prometheus data into a tar.gz which could be transferred and imported into an instance on our local machine.&lt;/p&gt;
&lt;p&gt;After the initial blog post where we created a tar.gz file from the prometheus storage.tsdb.path on the filesystem &lt;a href="https://twitter.com/roidelapluie"&gt;@roidelapluie&lt;/a&gt; pointed me out about the &lt;a href="https://prometheus.io/docs/prometheus/latest/querying/api/#snapshot"&gt;snapshot&lt;/a&gt; feature.&lt;/p&gt;
&lt;p&gt;So we did a bit of research and came up with this new procedure.&lt;/p&gt;
&lt;p&gt;First of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 06 Jun 2018 22:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2018-06-06:/blog/prometheus-export-import.html</guid><category>containers</category><category>prometheus</category><category>export</category><category>data</category><category>import</category><category>metrics</category><category>lock</category><category>waf</category><category>remote</category></item><item><title>Prometheus consul service discovery</title><link>https://visibilityspots.github.io/blog/prometheus-consul.html</link><description>&lt;p&gt;as published a few months ago I worked out a &lt;a href="http://localhost:8000/jenkins-docker-pipeline.html"&gt;dockerized a jenkins farm&lt;/a&gt; where both master as slaves are docker containers working together with services like nexus and such. Next to that setup I've dockerized my home setup where services like pi-hole, home-assistant and others are running as docker containers on a thin client I promoted to my home lab.&lt;/p&gt;
&lt;p&gt;To have an overview about all those containers and the resources they are consuming I pulled in the git repo of &lt;a href="https://github.com/vegasbrianc/prometheus"&gt;Brian Christner&lt;/a&gt; which spins up a whole &lt;a href="https://prometheus.io"&gt;prometheus&lt;/a&gt; stack with some exporters and a grafana instance to visualize …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 04 Jun 2018 22:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2018-06-04:/blog/prometheus-consul.html</guid><category>containers</category><category>prometheus</category><category>consul</category><category>service</category><category>discovery</category><category>dynamic</category><category>configuration</category></item><item><title>dockerized DNS over HTTPS using pi-hole through cloudflared proxy-dns</title><link>https://visibilityspots.github.io/blog/dockerized-cloudflared-pi-hole.html</link><description>&lt;p&gt;a few months ago I configured a thin client as my home server to replace the previous &lt;a href="../raspberry-pi.html"&gt;raspberry pi&lt;/a&gt; setup.&lt;/p&gt;
&lt;p&gt;During that migration I moved over all native services within docker containers. One of those services being a &lt;a href="https://pi-hole.net"&gt;pi-hole&lt;/a&gt; setup to block ad serving domains on dns level and to have a dns cache within our LAN to gain a bit of speed.&lt;/p&gt;
&lt;p&gt;It has been running ever since without any issue and worked pretty well.&lt;/p&gt;
&lt;p&gt;When cloudflare &lt;a href="https://blog.cloudflare.com/announcing-1111/"&gt;announced&lt;/a&gt; their fast and privacy based DNS resolver I got a bit intrigued by their DNS over HTTPS feature. Especially since our …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 21 Apr 2018 21:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2018-04-21:/blog/dockerized-cloudflared-pi-hole.html</guid><category>containers</category><category>docker</category><category>compose</category><category>docker-compose</category><category>pi-hole</category><category>pihole</category><category>cloudflared</category><category>proxy-dns</category><category>DoH</category><category>dns</category><category>https</category><category>over</category></item><item><title>NRPE troubleshooting</title><link>https://visibilityspots.github.io/blog/nrpe-troubleshooting.html</link><description>&lt;p&gt;When refactoring a &lt;a href="https://github.com/visibilityspots/icinga-scripts/blob/master/check_memory"&gt;check_memory&lt;/a&gt; I wrote a few years ago I bumped into the feared&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;NRPE&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Unable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;error message on our nagios instance.&lt;/p&gt;
&lt;p&gt;When looking for a solution I went through most possible debug steps I could think of and which are nicely described by nagios &lt;a href="https://support.nagios.com/kb/article/nrpe-nrpe-unable-to-read-output-620.html"&gt;support&lt;/a&gt; but didn't found any solution.&lt;/p&gt;
&lt;p&gt;I almost grabbed to some anti depressants when I thought of the thing I always forget about.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SELINUX&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When crawling through the audit log it became clear I forgot to configure the proper selinux context type for the new script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;PATH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m m-Double"&gt;1518702310 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 15 Feb 2018 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2018-02-15:/blog/nrpe-troubleshooting.html</guid><category>linux</category><category>nrpe</category><category>troubleshooting</category><category>nagios</category><category>icinga</category><category>selinux</category><category>unable</category><category>to</category><category>connect</category></item><item><title>Test ansible playbooks with docker</title><link>https://visibilityspots.github.io/blog/test-ansible-playbooks.html</link><description>&lt;p&gt;recently I started working at a new project where the infra is maintained by ansible. When been asked to write some functionality in a playbook I missed my &lt;a href="https://github.com/visibilityspots/vagrant-puppet"&gt;vagrant puppet&lt;/a&gt; setup where I could easily test my puppet code on my local machine.&lt;/p&gt;
&lt;p&gt;Due to my previous project I felt like maybe I could use docker for this purpose on the ansible part. So I looked a bit around and stumbled on the &lt;a href="https://github.com/William-Yeh/docker-ansible"&gt;docker-ansible github repository&lt;/a&gt; of William Yeh. He already did a great job by creating a docker container with ansible preinstalled for a lot of linux distributions.&lt;/p&gt;
&lt;p&gt;I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 09 Nov 2017 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2017-11-09:/blog/test-ansible-playbooks.html</guid><category>containers</category><category>ansible</category><category>docker</category><category>playbook</category><category>test</category></item><item><title>Jenkins docker-pipeline</title><link>https://visibilityspots.github.io/blog/jenkins-docker-pipeline.html</link><description>&lt;p&gt;in a previous blog post I talked about setting up a &lt;a href="https://visibilityspots.github.io/blog/dockerized-jenkins.html"&gt;dockerized jenkins master/slave setup&lt;/a&gt; and setting up a &lt;a href="https://visibilityspots.github.io/blog/nexus-oss-repository-manager.html"&gt;private docker registry using nexus&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The next thing on the roadmap was to use this jenkins setup to actually build new docker images for specific software. Before going to the different teams and talking how they now build their software and how this could be done using this new containerized setup I setted up a new jenkins job.&lt;/p&gt;
&lt;p&gt;This jenkins job will build a generic jenkins slave docker container which will be used by the jenkins master to build some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 30 Oct 2017 19:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2017-10-30:/blog/jenkins-docker-pipeline.html</guid><category>containers</category><category>jenkins</category><category>docker</category><category>pipeline</category><category>plugin</category><category>jenkinsfile</category><category>centos</category><category>master</category><category>slave</category><category>7</category></item><item><title>Jenkins gradle build succeeded with failure</title><link>https://visibilityspots.github.io/blog/gradle-build.html</link><description>&lt;p&gt;Today we bumped into an interesting issue in the jenkins builds of some android based applications. The gradle commands succeeded but then suddenly failed the build with this most cryptic message ever:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;BUILD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SUCCESSFUL&lt;/span&gt;

&lt;span class="n"&gt;Total&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;time&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mins&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;20.492&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;secs&lt;/span&gt;

&lt;span class="nl"&gt;FAILURE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Build&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;an&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;went&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;wrong&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Already&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;finished&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Try&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;stacktrace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;option&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;trace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;option&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;more&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since this came out of nowhere without any modification on the build servers we where flabbergasted since the builds ran fine on our local machines.&lt;/p&gt;
&lt;p&gt;So …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 21 Sep 2017 22:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2017-09-21:/blog/gradle-build.html</guid><category>automation</category><category>gradle</category><category>android</category><category>jenkins</category><category>FAILURE</category><category>Already</category><category>finished</category></item><item><title>Nexus OSS repository manager</title><link>https://visibilityspots.github.io/blog/nexus-oss-repository-manager.html</link><description>&lt;p&gt;looking for a global repository store which could store maven projects, yum repositories, docker repositories, we bumped into &lt;a href="https://help.sonatype.com/display/NXRM3/Repository+Manager+3"&gt;Nexus repository manager&lt;/a&gt;. We used the official docker image to see how it can be implemented in the dockerized CI environment.&lt;/p&gt;
&lt;h2&gt;docker repository&lt;/h2&gt;
&lt;p&gt;as a first the docker repository feature could be enabled so we can start building and storing docker images for the different jenkins build slaves and the jenkins master so our work is reproducible and stored in a safe central place.&lt;/p&gt;
&lt;p&gt;We configured 3 repositories in nexus for our docker images seen as a recommended approach in the &lt;a href="https://help.sonatype.com/display/NXRM3/Private+Registry+for+Docker#PrivateRegistryforDocker-HostedRepositoryforDocker(PrivateRegistryforDocker)"&gt;nexus …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 11 Sep 2017 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2017-09-11:/blog/nexus-oss-repository-manager.html</guid><category>containers</category><category>nexus</category><category>repository</category><category>manager</category><category>nginx</category><category>proxy</category><category>SSL</category><category>https</category><category>docker</category><category>private</category><category>group</category></item><item><title>Dockerized jenkins master/slave setup</title><link>https://visibilityspots.github.io/blog/dockerized-jenkins.html</link><description>&lt;p&gt;started at a new customer we were looking for a more flexible way of having jenkins spinning up slaves on the fly. This in a way a slave is only started and consuming resources when a specific job is running. That way those resources could be used more efficient.&lt;/p&gt;
&lt;p&gt;Also the fact that developers could take control over their build servers by managing the Dockerfiles themselves is a great advantage too. But that's for a later phase. Let's start at the beginning.&lt;/p&gt;
&lt;p&gt;For the docker host a CentOS 7 server has been provisioned and prepared to run the docker daemon …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 06 Sep 2017 22:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2017-09-06:/blog/dockerized-jenkins.html</guid><category>containers</category><category>docker</category><category>jenkins</category><category>master</category><category>slave</category><category>centos</category><category>7</category></item><item><title>Docker openstackclient-kilo container</title><link>https://visibilityspots.github.io/blog/docker-openstackclient-kilo.html</link><description>&lt;p&gt;A couple of years ago I deployed an openstack cluster based on &lt;a href="https://www.rdoproject.org/"&gt;RDO&lt;/a&gt;. Back in the days we implemented the &lt;a href="https://www.openstack.org/software/kilo/"&gt;kilo&lt;/a&gt; release. Until today we didn't updated yet due to various reasons being no need for the new features, no resources, no time no.. Upgrading would be a better option but we'll have to live with it and since it's running rather well so far we are quite happy with it.&lt;/p&gt;
&lt;p&gt;To manage that cloud I use the clients I installed on my local machine, from nova to cinder they all have different packages available for many different platforms. Only …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 29 May 2017 21:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2017-05-29:/blog/docker-openstackclient-kilo.html</guid><category>containers</category><category>docker</category><category>hub</category><category>automated</category><category>github</category><category>container</category><category>openstack</category><category>openstackclient</category><category>tools</category><category>source</category><category>at</category><category>run</category><category>rdo</category><category>kilo</category></item><item><title>Auto deploy webpage using pelican and travis</title><link>https://visibilityspots.github.io/blog/pelican-travis.html</link><description>&lt;p&gt;many years ago I created my own webpage, it all started with pure, HTML evolved to a wordpress and finally became a &lt;a href="https://blog.getpelican.com/"&gt;pelican&lt;/a&gt; based setup. It got served on many different hosting providers but since a few years it's running on &lt;a href="../aws-migration.html"&gt;S3&lt;/a&gt; storage and hosted through cloudfront all over the world.&lt;/p&gt;
&lt;p&gt;It's a very fast setup, and once the site has been deployed and every little service has been configured and implemented the only thing I need to do is writing content in &lt;a href="https://daringfireball.net/projects/markdown/"&gt;markdown&lt;/a&gt; without having to consider how to deploy or how it will look.&lt;/p&gt;
&lt;p&gt;In this post I'll …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sun, 21 May 2017 22:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2017-05-21:/blog/pelican-travis.html</guid><category>linux</category><category>pelican</category><category>travis</category><category>ci</category><category>travis-ci</category><category>s3</category><category>github</category><category>pages</category><category>static</category></item><item><title>Openstack Kilo change MTU till the VM it's tap interface</title><link>https://visibilityspots.github.io/blog/openstack-mtu.html</link><description>&lt;p&gt;Recently I was been asked to increase the MTU on the deployed openstack cluster at one of our customers. Since the beginning of my touch on openstack networking has been the hardest part to get my head around. In the first place because openstack does some nifty things on the networking path. But also cause for the use case at the customer a lot of customization has been done to get it implemented in their infrastructure.&lt;/p&gt;
&lt;p&gt;Hence the shiver when the MTU question was been made..&lt;/p&gt;
&lt;p&gt;Nevertheless together with a colleague who likes a challenge and has a profound knowledge …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 23 Mar 2017 19:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2017-03-23:/blog/openstack-mtu.html</guid><category>cloud</category><category>openstack</category><category>mtu</category><category>kilo</category><category>neutron</category><category>nova</category><category>config</category><category>ovs</category></item><item><title>S3stat</title><link>https://visibilityspots.github.io/blog/s3stat.html</link><description>&lt;p&gt;Some weeks ago an article on &lt;a href="https://news.ycombinator.com/item?id=12634447"&gt;hacker news&lt;/a&gt; got my interest. From time to time I really get an healthy dose of jealousy when people found an idea which could make them buy a tesla. My terms of someone who make a lot of money ;)&lt;/p&gt;
&lt;p&gt;This one is so brilliant in it's simplicity that I really was flabbergasted and made me wonder why I never came up with the idea. It generates nice reports of the usage of your site which is hosted by aws. Based on the logs of the S3 bucket or the cloudfront domain you setted up …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 26 Oct 2016 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2016-10-26:/blog/s3stat.html</guid><category>cloud</category><category>s3stat</category><category>aws</category><category>analytics</category><category>statistics</category><category>web</category><category>refers</category><category>s3</category><category>cdn</category><category>cloudfront</category></item><item><title>wireless bond archlinux arm</title><link>https://visibilityspots.github.io/blog/wireless-bond-archlinux.html</link><description>&lt;p&gt;for one of my projects, the &lt;a href="../social-media-wall.html"&gt;sms-twitter wall&lt;/a&gt; setup, I configured a raspberry pi with 2 wireless network interfaces to connect through a hotspot enabled on an android device. I discovered on previous events that the wireless adapter failed on me from time to time. So I went to the internet to look if I could add a second interface and bond them together.&lt;/p&gt;
&lt;p&gt;I found a lot of documentation on how to bond an active-backup strategy with a wired and a wireless interfaces but didn't found a setup with 2 wireless interfaces. After a while I figured out how …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 17 Oct 2016 21:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2016-10-17:/blog/wireless-bond-archlinux.html</guid><category>linux</category><category>wireless</category><category>bond</category><category>vip</category><category>wlan0</category><category>wlan1</category><category>static</category><category>ip</category><category>wpa_supplicant</category><category>netctl</category><category>failover</category><category>bonding</category><category>bond0</category><category>archlinux</category><category>raspberry</category><category>pi</category><category>arm</category><category>alarm</category></item><item><title>AWS migration</title><link>https://visibilityspots.github.io/blog/aws-migration.html</link><description>&lt;p&gt;About a year ago I attended the &lt;a href="http://aws.amazon.com/events/awsome-day/benelux/belgium/"&gt;AWSome Day&lt;/a&gt; at &lt;a href="http://lamot-mechelen.be"&gt;Mechelen&lt;/a&gt;. Back then I wrote a first draft article about it, but it got out of my sight unfortunately. I reviewed it and decided to publish it anyway.&lt;/p&gt;
&lt;p&gt;The event was based on their essentials course and took use through the different AWS core services (compute, storage, database and network).&lt;/p&gt;
&lt;p&gt;I do know it has nothing to see with open-source. But it is a part of that ultimate cloud based setup I believe in which exists in one central place from where you can manage all your virtual machines independent …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sun, 18 Sep 2016 21:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2016-09-18:/blog/aws-migration.html</guid><category>cloud</category><category>aws</category><category>awsome</category><category>awesome. cloud</category><category>amazon</category><category>migration</category><category>pelican</category><category>rds</category></item><item><title>Openstack static ip</title><link>https://visibilityspots.github.io/blog/openstack-static-ip.html</link><description>&lt;p&gt;last couple of days I have been fighting with the way an static ip is configured on an openstack virtual centos 6 instance. In our specific use case we ditched as many network openstack services as possible as I &lt;a href="https://visibilityspots.github.io/blog/openstack-layer2.html"&gt;previously&lt;/a&gt; described.&lt;/p&gt;
&lt;p&gt;We want to have the instances running in our current network spaces of the R&amp;amp;D department. In this department until some days ago we didn't had any DHCP server running. But a few weeks back we added an extra remote network space into our platform where we configured a remote compute-node.&lt;/p&gt;
&lt;p&gt;This is where the issues started popping …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 05 Sep 2016 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2016-09-05:/blog/openstack-static-ip.html</guid><category>cloud</category><category>openstack</category><category>rdo</category><category>kilo</category><category>static</category><category>ip</category><category>dhcp</category><category>cloud-init</category><category>config</category><category>drive</category><category>centos</category></item><item><title>Openstack live-migration</title><link>https://visibilityspots.github.io/blog/openstack-live-migration.html</link><description>&lt;p&gt;Some of you may already have notices others just stumbled on this post through a search engine, I have set up an openstack private cloud at one of our projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://visibilityspots.github.io/blog/vlan-flat-neutron-provider.html"&gt;vlan flat-neutron provider network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://visibilityspots.github.io/blog/openstack-layer2.html"&gt;layer2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have noticed that the benefits of having a private cloud is spreading through the different teams within the organization and therefore the interest into this flexibility is growing. Since this wasn't the original &lt;a href="https://visibilityspots.github.io/blog/vlan-flat-neutron-provider.html"&gt;use case&lt;/a&gt; we are encountering some design issues right now.&lt;/p&gt;
&lt;p&gt;For the original instances the default &lt;a href="http://docs.openstack.org/openstack-ops/content/compute_nodes.html#overcommit"&gt;overcommit&lt;/a&gt; ratios are fine. But the request for new machines with other goals are like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 21 Apr 2016 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2016-04-21:/blog/openstack-live-migration.html</guid><category>cloud</category><category>openstack</category><category>live</category><category>migration</category><category>kilo</category><category>kvm</category><category>block</category><category>config</category><category>drive</category><category>vfat</category></item><item><title>Openstack layer2</title><link>https://visibilityspots.github.io/blog/openstack-layer2.html</link><description>&lt;p&gt;A few months ago I implemented an RDO based openstack kilo release private cloud at one of our customers for their development platform. Through time we tackled a couple of issues so the cloud could be fitted into their work flows.&lt;/p&gt;
&lt;p&gt;We stumbled onto some minor issues and some major ones. Let's begin with the minor ones ;)&lt;/p&gt;
&lt;p&gt;When upgrading the all-in-one controller before we started using the cloud in 'production' a mean &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1284978"&gt;bug&lt;/a&gt; bit us in the ankle due to a new hiera package. After some digging around a &lt;a href="https://review.openstack.org/#/c/249301/3/packstack/modules/ospluginutils.py"&gt;patch&lt;/a&gt; came to the rescue together with the exclusion of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 26 Feb 2016 20:30:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2016-02-26:/blog/openstack-layer2.html</guid><category>cloud</category><category>openstack</category><category>layer2</category><category>security</category><category>groups</category><category>linux</category><category>bridge</category><category>ovs</category><category>open</category><category>vswitch</category><category>dhcp</category><category>kilo</category><category>rdo</category></item><item><title>SMS twitter wall</title><link>https://visibilityspots.github.io/blog/social-media-wall.html</link><description>&lt;p&gt;A long time ago I was active in the local scouting group. To earn some money to keep our group in a healthy financial position we organized a so called vedettweekend. It's an event where people can have a beer, &lt;a href="http://vedett.be"&gt;vedett&lt;/a&gt; obviously spin a dance, enjoy a spaghetti and have a good chat with your friends.&lt;/p&gt;
&lt;p&gt;I always played with the idea of creating a social media wall on one of the projectors we rented for the event. But I never found/made time for it, until today.. My youngest brother is who's interests are overlapping with mine brought up …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 03 Nov 2015 23:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2015-11-03:/blog/social-media-wall.html</guid><category>linux</category><category>sms</category><category>wall</category><category>sms-wall</category><category>sms-wall.org</category><category>tasker</category><category>python</category><category>php</category><category>archlinux</category><category>arch</category><category>arm</category><category>alarm</category><category>raspberry</category><category>tweet</category><category>social</category><category>pagekite</category></item><item><title>Vagrant puppet setup</title><link>https://visibilityspots.github.io/blog/vagrant-puppet-setup.html</link><description>&lt;p&gt;We at &lt;a href="https://inuits.eu"&gt;Inuits&lt;/a&gt; are using vagrant for a lot of use cases, neither you are a developer or a sysadmin you for sure will walk into it. Me, myself I do use it merely to automate the many different use cases asked by various projects. It took some time to get myself organized with this pretty nifty piece of software.&lt;/p&gt;
&lt;p&gt;In the beginning I used it with the default virtualization provider &lt;a href="https://virtualbox.org"&gt;virtualbox&lt;/a&gt; later on I switched to &lt;a href="https://visibilityspots.github.io/blog/vagrant-setup.html"&gt;lxc&lt;/a&gt; containers instead. By using those containers I already gained on performance. Spinning up and down new containers to test if an application …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 10 Oct 2015 23:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2015-10-10:/blog/vagrant-puppet-setup.html</guid><category>puppet</category><category>vagrant</category><category>rsync</category><category>puppetmaster</category><category>puppetserver</category><category>development</category><category>setup</category></item><item><title>Openstack vlan based flat neutron network provider</title><link>https://visibilityspots.github.io/blog/vlan-flat-neutron-provider.html</link><description>&lt;p&gt;at one of my projects I was been asked to set up a private cloud for a validation platform. The whole idea behind this proof of concept is based on the flexibility to spin up and down certain instances providing some specific functionality so tests banks can be ran against them.&lt;/p&gt;
&lt;p&gt;As soon as the tests are finished the machines could be terminated. Those instances should be configured using some configuration management software, like &lt;a href="https://puppetlabs.com/puppet/puppet-open-source"&gt;puppet&lt;/a&gt;. That way the instances are rebuildable and could be treated as cattle.&lt;/p&gt;
&lt;p&gt;On the other hand, it takes about 20 minutes to build up an …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 29 Sep 2015 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2015-09-29:/blog/vlan-flat-neutron-provider.html</guid><category>cloud</category><category>vlan</category><category>flat</category><category>neutron</category><category>provider</category><category>network</category><category>openstack</category><category>openvswitch</category><category>ovs</category></item><item><title>Btrfs mount issue</title><link>https://visibilityspots.github.io/blog/btrfs-mount-issue.html</link><description>&lt;p&gt;I decided to bootstrap my new machine with btrfs as filesystem instead of ext4 LVM volumes. By following the excellent arch-wiki &lt;a href="https://wiki.archlinux.org/index.php/Btrfs"&gt;btrfs page&lt;/a&gt; I successfully crafted a base system with sub volumes, limited on size and snapshots enabled.&lt;/p&gt;
&lt;p&gt;Everything went fine, installed all the other stuff I needed, pulled in my data and was ready to go.&lt;/p&gt;
&lt;p&gt;Obviously on that very moment disaster happened.. Due to an unexpected interrupt the journal went corrupt. When trying to boot I got stuck right after decrypted the disk failing to mount my btrfs root volume.&lt;/p&gt;
&lt;p&gt;Uncool, unpleasant, .. I almost got insane..&lt;/p&gt;
&lt;p&gt;So back …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 07 Sep 2015 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2015-09-07:/blog/btrfs-mount-issue.html</guid><category>linux</category><category>btrfs</category><category>mount</category><category>issue</category><category>error</category><category>transid</category><category>restore</category><category>recover</category><category>open_ctree</category><category>failed</category></item><item><title>Simple monitoring</title><link>https://visibilityspots.github.io/blog/simple-monitoring.html</link><description>&lt;p&gt;As I already wrote about in the past I have a &lt;a href="https://visibilityspots.com/raspberry-pi.html"&gt;raspberry pi&lt;/a&gt; running at home. I do also have a VPS running somewhere on the interweb for an owncloud instance.&lt;/p&gt;
&lt;p&gt;Being a sysadmin I wanted to know when my home devices become unreachable and when the owncloud instance is down. By mail in the first place if possible by sms message for free in the ideal world.&lt;/p&gt;
&lt;p&gt;And guess what, I managed to reach the ideal world to monitor my instances. Over here I'll describe how I managed to do so.&lt;/p&gt;
&lt;h1&gt;msmtp&lt;/h1&gt;
&lt;p&gt;First of all you need to install …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 26 May 2015 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2015-05-26:/blog/simple-monitoring.html</guid><category>linux</category><category>monitoring</category><category>sms</category><category>mail</category><category>ifttt</category><category>raspberry</category><category>monitor</category><category>ping</category></item><item><title>vagrant-setup</title><link>https://visibilityspots.github.io/blog/vagrant-setup.html</link><description>&lt;p&gt;In this article I'll try to describe how I use vagrant in my daily tasks as an operations dude as well as I deployed it at one of our customers to help the developers focusing on the coding part rather than the operations part.&lt;/p&gt;
&lt;h1&gt;Vagrant&lt;/h1&gt;
&lt;p&gt;Since the beginning of my career at inuits I'm using &lt;a href="https://vagrantup.com"&gt;vagrant&lt;/a&gt; almost everyday. If I got payed every time I spin up a box I could have bought that tesla already some years ago! But unfortunately I'm not :)&lt;/p&gt;
&lt;p&gt;For almost 99% of the use cases I use this nifty tool it's related to puppet. Writing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 09 Dec 2014 23:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-12-09:/blog/vagrant-setup.html</guid><category>linux</category><category>vagrant</category><category>lxc</category><category>CentOS</category><category>containers</category><category>linux</category><category>vagrant-lxc</category><category>development</category><category>devops</category><category>operations</category><category>centos</category></item><item><title>Github mirroring</title><link>https://visibilityspots.github.io/blog/github-mirroring.html</link><description>&lt;p&gt;As an enthusiastic open-source addict I use &lt;a href="http://github.com"&gt;github&lt;/a&gt; on a regularly base to share my knowledge with the world, to explore new software tools, to enhance software with new features, to fix bugs, to collaborate with others, and above all to live the open source way!&lt;/p&gt;
&lt;p&gt;But I also have to admit that their are some disadvantages too, from time to time the availability, well lacks availability.., you have to pay for private repositories used for testing purposes and github enterprise can't be used publically anymore..&lt;/p&gt;
&lt;h1&gt;Self-hosted git&lt;/h1&gt;
&lt;p&gt;Using your own git instance makes your software less accessible, since like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 27 Oct 2014 22:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-10-27:/blog/github-mirroring.html</guid><category>linux</category><category>github</category><category>mirror</category><category>pull</category><category>request</category><category>git</category><category>merge</category></item><item><title>Ansible orchestration</title><link>https://visibilityspots.github.io/blog/ansible-orchestration.html</link><description>&lt;p&gt;I do use &lt;a href="https://docs.puppetlabs.com/#puppetpuppet"&gt;puppet&lt;/a&gt; as our main configuration management tool. Together with &lt;a href="https://docs.puppetlabs.com/#puppetdbpuppetdblatest"&gt;puppetdb&lt;/a&gt; all our services are automatically configured from bottom to top.&lt;/p&gt;
&lt;p&gt;And it rocks, getting automated as much as possible it is like easy as hell to get a server up and running. The only feature it lacked in my opinion is orchestration. I do know about &lt;a href="http://puppetlabs.com/mcollective"&gt;collective&lt;/a&gt; which is made for this purpose.&lt;/p&gt;
&lt;p&gt;Only it's yet again using an agent which fails from time to time and eating resources which can be avoided. It's the same reason I don't use the puppet agent daemon but trigger puppet …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 21 Oct 2014 23:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-10-21:/blog/ansible-orchestration.html</guid><category>puppet</category><category>ansible</category><category>orchestration</category><category>tool</category><category>puppet</category><category>dynamic</category><category>inventory</category><category>puppetdb</category></item><item><title>Wifi QR code</title><link>https://visibilityspots.github.io/blog/wifi-qr-code.html</link><description>&lt;p&gt;To make the process of connecting to our local wifi at home a bit less complex I decided to create a qr code for it. That way people can easily use their camera of their smartphone to connect to our network without typing in the WPA key.&lt;/p&gt;
&lt;p&gt;So I looked on the net for a qr generator and started by typing in our SSID, when realizing it can't be secure to fill in our wpa key too.. It may be a bit paranoia but well I don't trust anything on the interweb most of the time.&lt;/p&gt;
&lt;p&gt;Doing some further research …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 28 Aug 2014 22:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-08-28:/blog/wifi-qr-code.html</guid><category>linux</category><category>wifi</category><category>qr</category><category>code</category><category>generator</category><category>qrencode</category><category>linux</category><category>archlinux</category></item><item><title>Rsnapshot backup</title><link>https://visibilityspots.github.io/blog/rsnapshot-backup.html</link><description>&lt;p&gt;Some weeks ago I removed some files on my system I wish I didn't cause I still needed them.&lt;/p&gt;
&lt;p&gt;Since I use some &lt;a href="https://visibilityspots.com/dropbox.html"&gt;encrypted containers in dropbox&lt;/a&gt; I figured I could recover them from this nifty service. But in the logs of dropbox those files are obviously also encrypted. So that was a no go.&lt;/p&gt;
&lt;p&gt;Therefore I started looking for backup solutions. The first one I tried was &lt;a href="http://backintime.le-web.org/"&gt;backintime&lt;/a&gt;, very easy to use, clean GUI interface but failed multiple times in restoring some files.&lt;/p&gt;
&lt;p&gt;Looking for a more decent piece of software I found &lt;a href="http://rsnapshot.org"&gt;rsnapshot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And hell I like it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 16 Jul 2014 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-07-16:/blog/rsnapshot-backup.html</guid><category>linux</category><category>udev</category><category>usb</category><category>disk</category><category>archlinux</category><category>mount</category><category>uuid</category><category>serial</category><category>cryptsetup</category><category>backup</category><category>rsnapshot</category></item><item><title>Nest</title><link>https://visibilityspots.github.io/blog/nest.html</link><description>&lt;p&gt;A few years ago I discovered the &lt;a href="http://nest.com"&gt;nest&lt;/a&gt; thermostat. It looked nice, is connected to the internet, self learning but a bit expensive and not so much documentation if it will work in Belgium nor with the boiler we have installed (Vaillant TurboTec).&lt;/p&gt;
&lt;p&gt;Doing some research on the internet I figured that they have updated their system software and are supporting European countries including Belgium. A solution for the power has also been found by an ICY converter so it could easily be implemented in setups where no power is transferred over those wires.&lt;/p&gt;
&lt;p&gt;So I had only to tackle …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 24 May 2014 23:30:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-05-24:/blog/nest.html</guid><category>home-automation</category><category>nest</category><category>thermostat</category><category>belgium</category><category>nest.com</category><category>honeywell</category><category>ICY</category><category>vaillant</category><category>TurboTec</category></item><item><title>Raspberry pi setup</title><link>https://visibilityspots.github.io/blog/raspberry-pi.html</link><description>&lt;p&gt;Since I discovered the joy of linux servers over desktop distributions a few years ago I revived an old portable and promoted him to be my home server.&lt;/p&gt;
&lt;p&gt;Connected him our router in the little storage room on a top shelf gathering dust I could test, configure, break (and pass sleep) a huge variety of open-source software.&lt;/p&gt;
&lt;p&gt;Many of those adventures I also used to provide my blog with content. After a while I figured this setup isn't really needed to be powered on 24h a day 7 days a week. So I bought myself a &lt;a href="http://www.raspberrypi.org/"&gt;raspberry pi&lt;/a&gt; which would …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 16 May 2014 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-05-16:/blog/raspberry-pi.html</guid><category>linux</category><category>raspberry</category><category>pi</category><category>archlinux</category><category>ARM</category><category>software</category><category>RAID</category><category>mdadm</category><category>irssi</category><category>bitlbee</category><category>usb</category><category>disks</category></item><item><title>Octoprint</title><link>https://visibilityspots.github.io/blog/octoprint.html</link><description>&lt;p&gt;At our &lt;a href="https://inuits.eu"&gt;office&lt;/a&gt; we have an &lt;a href="https://www.ultimaker.com/pages/our-printers/ultimaker-2"&gt;ultimaker 2&lt;/a&gt; installed, we have it now for some weeks and already printed out a bunch of stuff. It's cool to see, amazed by the technology.&lt;/p&gt;
&lt;p&gt;Expect the manner to start a print job, you have to save your generated &lt;a href="http://reprap.org/wiki/G-code"&gt;gcode&lt;/a&gt; files onto an SD card, stick it into the ultimaker and use the rather simple menu from the tiny display to start the print job.&lt;/p&gt;
&lt;p&gt;The time of a print job is rather long depending on the object you want to print, so many times you got up and went seeing if everything …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 02 May 2014 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-05-02:/blog/octoprint.html</guid><category>linux</category><category>raspberry</category><category>pi</category><category>octoprint</category><category>ultimaker</category><category>3d</category><category>printing</category></item><item><title>Pakiti setup</title><link>https://visibilityspots.github.io/blog/pakiti.html</link><description>&lt;p&gt;Nowadays it becomes more and more relevant knowing which version of a package is installed and having an overview of the packages infected by some bugs or security holes. That way you could see which servers are possibly vulnerable for those on the dark side.&lt;/p&gt;
&lt;p&gt;That's where &lt;a href="http://pakiti.sourceforge.net"&gt;pakiti&lt;/a&gt; comes in a clean web based overview of your servers listing all packages vulnerable against the CVE in particular.&lt;/p&gt;
&lt;p&gt;&lt;img alt="pakiti2" src="../../images/pakiti/pakiti2.png"&gt;&lt;/p&gt;
&lt;p&gt;It's a client server setup where the client reports the version of the packages to the pakiti server. The server on his turn checks those versions against CVE to see if there are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 25 Apr 2014 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-04-25:/blog/pakiti.html</guid><category>linux</category><category>pakiti</category><category>monitoring</category><category>security</category><category>linux</category><category>patching</category><category>cve</category></item><item><title>Mkdocs documentation</title><link>https://visibilityspots.github.io/blog/mkdocs.html</link><description>&lt;p&gt;To make our and other lives less painful writing documentation is a good start to decrease the level of frustration when working on a shared project.&lt;/p&gt;
&lt;p&gt;It's a common feeling writing documentation isn't something we are all waiting for to do. In an effort to make it easier for all of us an automatically way of deployment can be managed by our good friend jenkins in combination with docker.&lt;/p&gt;
&lt;p&gt;The details about this flow is been described on this page. After reading through this documentation section you should be aware of the general deployment idea so you can implement it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sun, 20 Apr 2014 17:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-04-20:/blog/mkdocs.html</guid><category>linux</category><category>documentation</category><category>mkdoc</category><category>automation</category><category>pandoc</category><category>markdown</category><category>html</category><category>linux</category></item><item><title>CloudCollab Amsterdam #CCCEU13</title><link>https://visibilityspots.github.io/blog/cloudcollab-amsterdam.html</link><description>&lt;p&gt;Cloudstack, an item I had on my todo list with some lower priority against daily maintenance of our server park. But since attending &lt;a class="reference external" href="https://twitter.com/ke4qqq"&gt;David Nalley's&lt;/a&gt; talk on LinuxCon I shifted it up some places. Although I expected a real hands on session the talk he gave about a cloudstack environment for development was really intriguing and matched completely with what I had in mind.&lt;/p&gt;
&lt;p&gt;Being fully convinced it fits in my idea of a fully automated development environment which meets to all the needs of developers to start writing code real quickly on machines similar to the production environment.&lt;/p&gt;
&lt;p&gt;At …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 23 Nov 2013 19:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-11-23:/blog/cloudcollab-amsterdam.html</guid><category>conferences</category><category>cloudstack</category><category>conference</category><category>cloudcollab</category><category>Amsterdam</category><category>cloud</category><category>apache</category><category>2013</category><category>#CCCEU13</category></item><item><title>Git server</title><link>https://visibilityspots.github.io/blog/git-server.html</link><description>&lt;p&gt;For some of my development projects I'm using git repositories because of the flexibility of it. But the initial beta phase I don't want to keep private until I created something working. Normally I use github.com repositories for them, a good service except you have to pay for private repositories.&lt;/p&gt;
&lt;p&gt;So I searched the internet for private alternatives and installed &lt;a class="reference external" href="http://www.gitlab.org"&gt;gitlab&lt;/a&gt; on my CentOS 6 machine. It worked fine, but it was a bit of an overkill to manage about 10 repositories for only one user, myself. So I decided to migrate it back to the essence.&lt;/p&gt;
&lt;p&gt;The essence …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 01 Nov 2013 14:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-11-01:/blog/git-server.html</guid><category>linux</category><category>git</category><category>server</category><category>repo</category><category>gitweb</category><category>gitalist</category><category>centos</category></item><item><title>Dashing</title><link>https://visibilityspots.github.io/blog/dashing.html</link><description>&lt;p&gt;Using multiple nice interface dashboards to get an overview of your services is a great thing. But navigating to them all separately could sometimes be rather pain full.&lt;/p&gt;
&lt;p&gt;Therefore I looked for some central place to give a broad overview of all of them. During last year many passed through during my search on the internet. The 2 most interesting ones where &lt;a class="reference external" href="http://fdietz.github.io/team_dashboard/"&gt;team dashboard&lt;/a&gt; and &lt;a class="reference external" href="http://shopify.github.io/dashing/"&gt;dashing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Team dashboard is a promising one which could gather extremely specific data and give those back in some nice graphics. That way you could create your own very specific dashboard with all graphics and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 31 Oct 2013 21:30:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-10-31:/blog/dashing.html</guid><category>linux</category><category>dashing</category><category>monitoring</category><category>dashboard</category><category>overview</category><category>screenly</category><category>raspberry pi</category></item><item><title>LinuxCon Edinburgh</title><link>https://visibilityspots.github.io/blog/linuxcon-edinburgh.html</link><description>&lt;p&gt;I got a great opportunity by attending LinuxCon in Edinburgh.&lt;/p&gt;
&lt;p&gt;Will try to share my experiences there in this blogpost by listing the topics and people I found interesting so perhaps others could take also advantage of it.&lt;/p&gt;
&lt;div class="section" id="topics"&gt;
&lt;h2&gt;Topics&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://mesos.apache.org/"&gt;Apache mesos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;a cluster manager that provides efficient resource isolation and sharing across distributed applications or frameworks.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://status.openstack.org/zuul/"&gt;Zuul&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;a pipeline oriented project gating and automation system.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://lttng.org/"&gt;LTTng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The LTTng project aims at providing highly efficient tracing tools for Linux. Its tracers help tracking down performance issues and debugging problems involving multiple concurrent processes and threads. Tracing across multiple systems is also …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 24 Oct 2013 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-10-24:/blog/linuxcon-edinburgh.html</guid><category>conferences</category><category>linuxcon</category><category>Edinburgh</category><category>linux</category><category>foundation</category><category>inuits</category></item><item><title>CPAN rpm packages</title><link>https://visibilityspots.github.io/blog/cpan-rpm-packages.html</link><description>&lt;p&gt;I went crazy from perl and the installation of their modules. For some icinga checks we need to install a few base perl packages using &lt;a class="reference external" href="http://search.cpan.org/~miyagawa/App-cpanminus-1.7001/lib/App/cpanminus.pm"&gt;cpanminus&lt;/a&gt;. It's taking a long time before the installation succeeds depending on the internet connection or server specifications.&lt;/p&gt;
&lt;p&gt;Using a puppet exec to automate this installation is frustrating because the timeout is unpredictable and could take hours from time to time!&lt;/p&gt;
&lt;p&gt;So I started to look for a way to package it into an rpm which I can distribute over our own yum repository.&lt;/p&gt;
&lt;p&gt;The first software I got reviewed is &lt;a class="reference external" href="http://perl.arix.com/cpan2rpm/"&gt;cpan2rpm&lt;/a&gt;, it looked promising …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 05 Oct 2013 14:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-10-05:/blog/cpan-rpm-packages.html</guid><category>linux</category><category>cpan</category><category>spec</category><category>rpm</category><category>package</category><category>packaging</category><category>centos</category><category>yum</category><category>repository</category><category>cpanspec</category><category>rpmbuild</category></item><item><title>Taskwarrior</title><link>https://visibilityspots.github.io/blog/taskwarrior.html</link><description>&lt;p&gt;I've used a lot's of tools to get a grip on my todo lists for work, for the scouting movement, for technical projects, household, etc. Started by using pen and paper, switched to a little notebook (which I still use for short-term tasks) to start using software to organize them.&lt;/p&gt;
&lt;p&gt;I've used evernote, gtasks, tracks, github issues, gitlab issues, redmine tickets, in short plenty passed by only &lt;a class="reference external" href="http://www.visibilityspots.com/tracks.html"&gt;tracks&lt;/a&gt; survived. I still use it for my work related projects, everyday at 8:30AM I get my list of tasks for that day. That way I have some sort of control on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 30 Sep 2013 21:45:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-09-30:/blog/taskwarrior.html</guid><category>linux</category><category>inuits</category><category>tasks</category><category>task</category><category>taskwarrior</category><category>centos</category><category>command</category><category>line</category><category>task-web</category><category>mirakel</category><category>todo</category></item><item><title>Upgrade to puppet 3.3.0</title><link>https://visibilityspots.github.io/blog/puppet-3-upgrade.html</link><description>&lt;p&gt;I finally got to the point where I upgraded a whole puppet infrastructure from puppet 2.6.x to the last stable version of puppet, &lt;a class="reference external" href="http://docs.puppetlabs.com/puppet/3/reference/release_notes.html"&gt;3.3.0&lt;/a&gt;. And after finding out the way to go it was surprisingly easy and no big issues came across.&lt;/p&gt;
&lt;p&gt;One of the main reasons to upgrade was to start using the latest version of foreman, were we used 0.4, so we can start provisioning our own development vm's with some fancy cloud solution like for example &lt;a class="reference external" href="http://cloudstack.apache.org/"&gt;cloudstack&lt;/a&gt; using our production puppet tree.&lt;/p&gt;
&lt;p&gt;Before the upgrade we had the puppet-client &amp;amp; server (2.6 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 20 Sep 2013 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-09-20:/blog/puppet-3-upgrade.html</guid><category>puppet</category><category>puppet</category><category>upgrade</category><category>3.3.0</category><category>2.6.x</category><category>issues</category><category>foreman</category><category>passenger</category><category>puppetdb</category></item><item><title>Command line printing &amp; scanning</title><link>https://visibilityspots.github.io/blog/printing-scanning.html</link><description>&lt;p&gt;Since I discovered the joy of using the ratpoison window manager I'm trying to do all tasks I need to perform on my system using the command line.&lt;/p&gt;
&lt;p&gt;One of those frequently used tasks is printing out documents or scanning in files. Until today I used the software viewer of my documents to print and simple-scan to scan my files.&lt;/p&gt;
&lt;p&gt;Nowadays I use the command line to perform those tasks. To print out documents I use the &lt;a class="reference external" href="http://www.tldp.org/HOWTO/Printing-Usage-HOWTO-1.html"&gt;lp&lt;/a&gt; command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;quot;Get the status off all printers on your system&amp;quot;
$ lpc status all

&amp;quot;Print the desired file to a specific printer&amp;quot;
$ lpr …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 02 Aug 2013 21:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-08-02:/blog/printing-scanning.html</guid><category>linux</category><category>print</category><category>scan</category><category>command</category><category>line</category><category>linux</category><category>lpr</category><category>scanimage</category></item><item><title>CentOS 6.4 software raid &amp; LVM</title><link>https://visibilityspots.github.io/blog/raid.html</link><description>&lt;p&gt;Been asked to setup a software raid of 12TB on a minimal CentOS 6.4 installation with 5 disks of 3TB each. Never played with raid nor lvm before so the challenge was great!&lt;/p&gt;
&lt;p&gt;I started by doing research about &lt;a class="reference external" href="http://www.cyberciti.biz/tips/raid5-vs-raid-10-safety-performance.html"&gt;RAID&lt;/a&gt;. Came to the conclusion that RAID 5 was the best option for our purpose. So kept looking for a way to implement a software raid and stumbled into &lt;a class="reference external" href="http://linux.die.net/man/8/mdadm"&gt;mdadm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using the information of &lt;a class="reference external" href="http://richard.blog.kraya.co.uk/2012/04/27/3tb-hdd-raid5-centos-6-2/"&gt;Richard&lt;/a&gt;'s and &lt;a class="reference external" href="http://zackreed.me/articles/48-adding-an-extra-disk-to-an-mdadm-array"&gt;Zack Reed&lt;/a&gt;'s blogs I easily setted up the raid array and created some lvm volumes on top of that.&lt;/p&gt;
&lt;p&gt;Creating of 3TB …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 24 Jul 2013 23:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-07-24:/blog/raid.html</guid><category>linux</category><category>software</category><category>raid</category><category>softwareraid</category><category>lvm</category><category>mdadm</category><category>centos</category></item><item><title>Hubot, the github chat automated bot</title><link>https://visibilityspots.github.io/blog/hubot.html</link><description>&lt;p&gt;Some weeks ago I was asked by a customer to implement a bot on an IRC channel. Did some research about this topic and stumbled on the github &lt;a class="reference external" href="http://github.hubot.com"&gt;hubot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The installation on a dedicated server running CentOS 6, using the irc adapter isn't hard. By following those steps you can easily start your own bot on a specified IRC channel.&lt;/p&gt;
&lt;p&gt;You need some pre installed packages:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# yum install openssl openssl-devel openssl-static crypto-utils expat expat-devel gcc-c++ git
&lt;/pre&gt;
&lt;p&gt;After installed those pre requirements nodejs is the next service we need. You can install the newest version using rpm packages you can find …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 03 Jun 2013 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-06-03:/blog/hubot.html</guid><category>linux</category><category>hubot</category><category>irc</category><category>xmpp</category><category>chat</category><category>bot</category><category>github</category><category>scripts</category></item><item><title>Chromium eid</title><link>https://visibilityspots.github.io/blog/chromium-eid.html</link><description>&lt;p&gt;During this time of the year in Belgium most people needs to fill in their taxes forms.&lt;/p&gt;
&lt;p&gt;Since a few years the Belgium government provided an electronic way to accomplish this task. Using a digital passport you can authenticate yourself.&lt;/p&gt;
&lt;p&gt;I wanted to use this nice tool so I had to configure my local setup to have it all glued together on my linux machine.&lt;/p&gt;
&lt;p&gt;The necessary steps I described in this post so other interested people can use their linux setups also to fill in the tax forms.&lt;/p&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;The mayor package to install on a fedora machine is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 29 May 2013 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-05-29:/blog/chromium-eid.html</guid><category>linux</category><category>archlinux</category><category>fedora</category><category>linux</category><category>eid</category><category>fod</category><category>Belgium</category><category>chrome</category><category>chromium</category><category>browser</category></item><item><title>Ratpoison window manager</title><link>https://visibilityspots.github.io/blog/ratpoison.html</link><description>&lt;p&gt;My first steps in linux where on a ubuntu distribution, when you could order the ISO images on a cd-rom delivered by the post.&lt;/p&gt;
&lt;p&gt;I liked it a lot and ever since I only used linux on my home based devices. Following the releases of Ubuntu. Starting at inuits I tried something else and installed CentOS desktop on my laptop. The idea behind this was to gain experience on the CentOS distributions.&lt;/p&gt;
&lt;p&gt;Once I figured out that it didn't made sense since a laptop has other purposes then a server. By the time we got new machines I decided to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 22 May 2013 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-05-22:/blog/ratpoison.html</guid><category>linux</category><category>ratpoison</category><category>window</category><category>manager</category><category>fedora</category><category>desktop</category></item><item><title>Conky-colors</title><link>https://visibilityspots.github.io/blog/conky-colors.html</link><description>&lt;p&gt;Back in the days I once wrote a &lt;a class="reference external" href="http://www.visibilityspots.com/conky.html"&gt;blogpost&lt;/a&gt; about a &lt;a class="reference external" href="http://conky.sourceforge.net"&gt;conky&lt;/a&gt; setup on a Ubuntu desktop. In the meantime I'm not using ubuntu anymore and kinda tweaked my whole conky setup. I switched to fedora 18 and using &lt;a class="reference external" href="http://helmuthdu.deviantart.com/art/CONKY-COLORS-244793180"&gt;conky-colors&lt;/a&gt; those days in front of the &lt;a class="reference external" href="http://www.nongnu.org/ratpoison/"&gt;ratpoison&lt;/a&gt; window manager.&lt;/p&gt;
&lt;p&gt;This post will go trough all the steps I did to came to the actual result. When something isn't clear, or could be done on a more smoother/better way, please feel free to bug me about it!&lt;/p&gt;
&lt;p&gt;Installing some required packages before actually compiling the conky-colors source:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo yum install …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 20 May 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-05-20:/blog/conky-colors.html</guid><category>linux</category><category>conky</category><category>conky-colors</category><category>fedora</category><category>desktop</category></item><item><title>Tracks</title><link>https://visibilityspots.github.io/blog/tracks.html</link><description>&lt;p&gt;To get an overview of my todo's I used to list them in google tasks. Back in time I was convinced it would nicely integrate with all tools software and distributions I would use. After some month's I figured out it wouldn't.&lt;/p&gt;
&lt;p&gt;So I searched on the web for software which would take that task over from google. I used to play with several tools, from &lt;a class="reference external" href="http://trac.edgewall.org/"&gt;trac&lt;/a&gt;, to &lt;a class="reference external" href="https://www.chiliproject.org/"&gt;chiliproject&lt;/a&gt; to &lt;a class="reference external" href="http://www.redmine.org/"&gt;redmine&lt;/a&gt;.
All those tools worked very nice but were some overkill to only manages todo lists.&lt;/p&gt;
&lt;p&gt;In the meantime I installed &lt;a class="reference external" href="http://gitlab.org/"&gt;gitlabhq&lt;/a&gt;, tried to abuse the issues there to manage …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 16 May 2013 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-05-16:/blog/tracks.html</guid><category>linux</category><category>tracks</category><category>gtd</category><category>project</category><category>management</category><category>todo</category><category>list</category></item><item><title>Irssi bitlbee channel</title><link>https://visibilityspots.github.io/blog/irssi-bitlbee-channel.html</link><description>&lt;p&gt;Every time I want to join a channel on a jabber account using bitlbee I'm a bit confused and have to search the whole inter-webs before actually finding out howto configure my chat setup to do so.&lt;/p&gt;
&lt;p&gt;My online search points me out to the &lt;a class="reference external" href="http://wiki.bitlbee.org/JabberGroupchats"&gt;bitlbee wiki&lt;/a&gt;. Nevertheless those commands never got to the point to have it actually working. After many attempts a colleague pointed me to the right solution.&lt;/p&gt;
&lt;p&gt;To never forget it anymore and sharing the working setup with the world I summarize it in this blog post.&lt;/p&gt;
&lt;p&gt;In your bitlbee control channel &lt;strong&gt;&amp;amp;bitlbee&lt;/strong&gt; :&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chat add [account …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 10 May 2013 13:30:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-05-10:/blog/irssi-bitlbee-channel.html</guid><category>linux</category><category>irssi</category><category>bitlbee</category><category>channel</category><category>chat</category><category>groupchat</category><category>jabber</category><category>xmpp</category></item><item><title>GTalkSMS mobile alerting through xmpp protocol</title><link>https://visibilityspots.github.io/blog/gtalksms.html</link><description>&lt;p&gt;Recently I bumped into &lt;a class="reference external" href="http://code.google.com/p/gtalksms/"&gt;GTalkSMS&lt;/a&gt;&amp;nbsp;when I was surfing the net for manuals on irssi &amp;amp; bitlbee using to chat so I could move away from pidgin.&lt;/p&gt;
&lt;p&gt;This GTalkSMS tool is quite cool. When am at work or at home my mobile isn't always in my sight. Therefore it could happen someone has to call me a few times before I answer the call.&lt;/p&gt;
&lt;p&gt;(biggest frustration of the girlfriend meaning you have to answer your call within a time period of 3 seconds because you're working in IT)&lt;/p&gt;
&lt;p&gt;Using this nifty tool you can control your mobile through your favorite chat …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 19 Dec 2012 18:56:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-12-19:/blog/gtalksms.html</guid><category>android</category><category>alerts</category><category>Android</category><category>chat</category><category>control</category><category>gtalk</category><category>gtalksms</category><category>irssi</category><category>Mobile</category><category>Pidgin</category><category>sms</category><category>xmpp</category><category>inuits</category></item><item><title>Lighttpd change tcp port in CentOS</title><link>https://visibilityspots.github.io/blog/selinux.html</link><description>&lt;p&gt;It seems like a very simple job, and in fact it is. But I had an issue when I tried to change this in my&amp;nbsp;Cent OS&amp;nbsp;6.3 setup.&lt;/p&gt;
&lt;p&gt;After some digging on the internet I found out selinux was the blocking factor.&lt;/p&gt;
&lt;p&gt;The configuration of the new port has to be done in the lighttpd conf file.&lt;/p&gt;
&lt;p&gt;/etc/lighttpd/lighttpd.conf&lt;/p&gt;
&lt;pre class="literal-block"&gt;
server.port = 2080
&lt;/pre&gt;
&lt;p&gt;When I changed the config file and restarted the /etc/init.d/lighttpd service I got following error:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(network.c.379) can't bind to port: &amp;nbsp;2080 Permission denied
&lt;/pre&gt;
&lt;p&gt;I checked that I added the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 05 Dec 2012 21:24:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-12-05:/blog/selinux.html</guid><category>linux</category><category>centOS</category><category>lighttpd</category><category>selinux</category><category>webserver</category></item><item><title>Dropbox</title><link>https://visibilityspots.github.io/blog/dropbox.html</link><description>&lt;p&gt;Reading this article will go through the process I went through configuring multiple dropbox accounts on my centos machine (one personal and one for work) and encrypting them both using encfs.&lt;/p&gt;
&lt;p&gt;That way I'm sure dropbox can't read the data stored into it. Because no I don't trust anybody on the cloud!&lt;/p&gt;
&lt;p&gt;In the first part I will configure 2 dropbox services using a CentOS 6 Desktop, in the second part I will encrypt those 2 dropbox services using encfs.&lt;/p&gt;
&lt;p&gt;The first account you can just install and configure the normal way provided by &lt;a class="reference external" href="https://www.dropbox.com/install"&gt;dropbox&lt;/a&gt;&amp;nbsp;itself. Here I configured my …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 15 Oct 2012 18:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-10-15:/blog/dropbox.html</guid><category>linux</category><category>accounts</category><category>centOS</category><category>dropbox</category><category>encfs</category><category>encryption</category><category>multiple</category><category>security</category></item><item><title>Puppet sslv3 alert certificate revoked</title><link>https://visibilityspots.github.io/blog/puppet-revoked-certificate.rst.html</link><description>&lt;p&gt;I started the day with ssl issues using puppet. Last week I cleaned 2 hosts in our tree using the puppet command&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# puppet node clean [hostname]
&lt;/pre&gt;
&lt;p&gt;on the puppetmaster. I did this to clean out the stored configs for those nodes.&lt;/p&gt;
&lt;p&gt;But I didn't realized this also cleaned out the ssl certificates for those clients. So I started the new week with this uncomfortable issue:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[root&amp;#64;agent ~]# puppet agent --test err: Could not retrieve catalog from remote server: SSL_connect returned=1 errno=0 state=SSLv3 read server session ticket A: sslv3 alert certificate revoked warning: Not using cache on failed …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 08 Oct 2012 11:22:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-10-08:/blog/puppet-revoked-certificate.rst.html</guid><category>puppet</category><category>certificate</category><category>continuous integration</category><category>Linux</category><category>puppet</category><category>revoke</category><category>sign</category><category>ssl</category></item><item><title>Writing customized icinga checks</title><link>https://visibilityspots.github.io/blog/icinga-checks.html</link><description>&lt;p&gt;Recently I started to try writing a customized script for the &lt;a class="reference external" href="https://www.icinga.org/"&gt;icinga&lt;/a&gt; monitoring tool. I will try to describe the steps I went trough to achieve this in this post. I assume you already have a working icinga setup.
If not you can find documentation about this on&amp;nbsp;&lt;a class="reference external" href="http://docs.icinga.org/"&gt;http://docs.icinga.org/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First of all you need to script. I created a script which will check if a service is running using the command&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# /etc/init.d/service status
&lt;/pre&gt;
&lt;p&gt;to see how to implement this in icinga. The script can be found on my &lt;a class="reference external" href="https://github.com/visibilityspots/icinga-scripts/blob/master/check_jenkins"&gt;github&lt;/a&gt; repo.&lt;/p&gt;
&lt;p&gt;Once you have tested …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 25 Sep 2012 11:16:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-09-25:/blog/icinga-checks.html</guid><category>linux</category><category>centOS</category><category>checks</category><category>icinga</category><category>monitoring</category><category>nrpe</category><category>server</category></item><item><title>SMS server using CentOS, kannel and playsms</title><link>https://visibilityspots.github.io/blog/sms-server.html</link><description>&lt;p&gt;On this page I will describe the way I went trough to configure an sms gateway using a laptop, &lt;a class="reference external" href="http://www.business.vodafone.com/site/bus/public/enuk/support/10_productsupport/usb_stick/01_vodafone/02_vodafone_k3565/20_software/p_software.jsp"&gt;huawei&lt;/a&gt; modem, &lt;a class="reference external" href="http://www.falcom.de"&gt;falcom&lt;/a&gt; A2D-1 or the &lt;a class="reference external" href="http://www.option.com/support/globe-trotter-hsdpa"&gt;option&lt;/a&gt; Globetrotter hardware using the open source software &lt;a class="reference external" href="http://www.kannel.org/"&gt;kannel&lt;/a&gt; &amp;amp; &lt;a class="reference external" href="http://playsms.org/"&gt;playsms&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The main goal of this project was related to the scouting movement in Belgium I'm active. We wanted to interrogate all of our members who were on a start weekend of the next scouting year. To do this we had the idea to use the sms communication channel. This because almost every youngster has the possibility to send sms messages without a big effort.&lt;/p&gt;
&lt;p&gt;To …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 24 Jul 2012 11:34:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-07-24:/blog/sms-server.html</guid><category>linux</category><category>centOS</category><category>debian</category><category>gsm</category><category>huawai</category><category>kannel</category><category>playsms</category><category>server</category><category>sms</category><category>option</category><category>globetrotter</category><category>falcom</category><category>mobile</category><category>vikings</category></item><item><title>SSH acces on Lacie Network Space 2</title><link>https://visibilityspots.github.io/blog/lacie-networkspace-2.html</link><description>&lt;p&gt;Recently we installed a Lacie Network Space 2 at home. Easy to share documents on the LAN network, having a central place for common media etc. After playing around with it I wanted to see if it's possible to gain access to the underlying operating system of it. On that way I could for example use this access to wake up a pc with wake on LAN.&lt;/p&gt;
&lt;p&gt;And guess what, it can be done and thanks to a script of a guy Andreus it's even very easy! I found a &lt;a class="reference external" href="http://forum.nas-central.org/viewtopic.php?f=240&amp;amp;t=4631"&gt;forum post&lt;/a&gt; about his work and tested it successfully with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 28 May 2012 15:18:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-05-28:/blog/lacie-networkspace-2.html</guid><category>linux</category><category>access</category><category>capsule</category><category>lacie</category><category>Linux</category><category>NAS</category><category>network</category><category>root</category><category>space</category><category>ssh</category><category>update</category></item><item><title>Create and distribute .rpm package</title><link>https://visibilityspots.github.io/blog/rpm-package.html</link><description>&lt;p&gt;You wrote a piece of software and want to distribute it on an easy way through a yum repository? That can be done, by making in the first place an rpm package of your code.&lt;/p&gt;
&lt;p&gt;In the first place you need to set up a directory structure. This can be done using the tool rpmdevtools on a rhel based machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# yum install rpmdevtools
&lt;/pre&gt;
&lt;p&gt;Once you installed the software you need to setup the directory tree:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rpmdev-setuptree
&lt;/pre&gt;
&lt;p&gt;This will install the necessary rmpbuild directory tree.&lt;/p&gt;
&lt;p&gt;You will see there is create a SOURCES directory, you need to get your software source …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 07 Apr 2012 17:31:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-04-07:/blog/rpm-package.html</guid><category>linux</category><category>build</category><category>new</category><category>package</category><category>repository</category><category>rpm</category><category>yum</category></item><item><title>Puppet module mumble-server</title><link>https://visibilityspots.github.io/blog/puppet-mumble.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://mumble.sourceforge.net/"&gt;Mumble&lt;/a&gt; is an open source, low-latency, high quality voice chat software primarily intended for use while gaming.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://puppetlabs.com/"&gt;Puppet&lt;/a&gt; is a tool designed to manage the configuration of Unix-like and Microsoft Windows systems decoratively.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/visibilityspots/puppet-mumble"&gt;puppet-mumble&lt;/a&gt; module installs a mumble server (version 1.2.3) automatically on a CentOS 6.x machine using the puppet software based on &lt;a class="reference external" href="http://mumble.sourceforge.net/Install_CentOS5"&gt;mumble-documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The module needs a repository which contains the &lt;a class="reference external" href="http://www.visibilityspots.com/repos/repoview/mumble-server.html"&gt;mumble-server&lt;/a&gt; package. I distribute this package on my own &lt;a class="reference external" href="http://www.visibilityspots.com/repos/repoview/"&gt;visibilityspots&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;Using puppet this will create the necessary mumble user and group and will configure the mumble-server using your desired settings, like username, password …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 04 Apr 2012 15:31:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-04-04:/blog/puppet-mumble.html</guid><category>puppet</category><category>centOS</category><category>Linux</category><category>module</category><category>mumble</category><category>mumble-server</category><category>open-source</category><category>puppet</category></item><item><title>Cisco HWIC 3G configuration to 2G</title><link>https://visibilityspots.github.io/blog/cisco-3g.html</link><description>&lt;p&gt;In some cisco routing devices you have the possibility to extend the features with a HWIC 3G card so mobile connectivity is added to your network infrastructure. This can be interesting for a mobile fail-over connection.&lt;/p&gt;
&lt;p&gt;But as we all now, the mobile reception isn't always that good. To see the signal strength on your cisco device you can use:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
show cellular 0/0/0 connection
&lt;/pre&gt;
&lt;p&gt;depending on which slot you plugged the HWIC card into. If the measured value is beneath the -100 dBm then you have sufficient signal to setup a 3G ( CDMA - WCDMA) connection on.&lt;/p&gt;
&lt;p&gt;If that's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 03 Apr 2012 14:36:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-04-03:/blog/cisco-3g.html</guid><category>networking</category><category>2G</category><category>3G</category><category>auto-band</category><category>band</category><category>cellular</category><category>cisco</category><category>gsm</category><category>gsm-all-bands</category><category>Mobile</category><category>router</category></item><item><title>BGP announcing default route</title><link>https://visibilityspots.github.io/blog/bgp-default-route.html</link><description>&lt;div class="section" id="advertising-default-route-with-bgp"&gt;
&lt;h2&gt;Advertising default route with BGP&lt;/h2&gt;
&lt;p&gt;If you want to announce the default route which is statically routed then you have to add following commands to the working BGP configuration:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ip route 0.0.0.0 0.0.0.0 192.168.1.1
router bgp 65001
network 0.0.0.0
default-information originate
&lt;/pre&gt;
&lt;p&gt;when you then clear the ip bgp routing softly (so the current connecting will not be broken)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
clear ip bgp soft in
clear ip bgp soft out
&lt;/pre&gt;
&lt;p&gt;you should see that the default route is will be advertised:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sh ip bgp summary
sh ip bgp neighbors IP …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 31 Mar 2012 13:07:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-03-31:/blog/bgp-default-route.html</guid><category>networking</category><category>bgp</category><category>cisco</category><category>default</category><category>networking</category><category>route</category></item><item><title>Apple remote (A1156) - MacBook Pro 3.1 &amp; Ubuntu 10.04</title><link>https://visibilityspots.github.io/blog/apple-linux-remote.html</link><description>&lt;p&gt;It isn't supported by default using Ubuntu but it's as handy as hell, the apple infrared remote control. After some mayor headaches I finally succeeded to configure it manually on my MacBook Pro 3.1 running Ubuntu 10.04.&lt;/p&gt;
&lt;p&gt;It's quite easy once you know how.&lt;/p&gt;
&lt;p&gt;Installation of the lirc library:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo apt-get install lirc
&lt;/pre&gt;
&lt;p&gt;Adapting the configuration files (make sure to backup them first!):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo cp /old/file /new/file.bak
&lt;/pre&gt;
&lt;p&gt;/etc/lirc/hardware.conf&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# /etc/lirc/hardware.conf # #Chosen Remote Control REMOTE=&amp;quot;Apple Mac mini USB IR Receiver&amp;quot; REMOTE_MODULES=&amp;quot;uinput&amp;quot; REMOTE_DRIVER=&amp;quot;macmini&amp;quot; REMOTE_DEVICE=&amp;quot;/dev/usb/hiddev0&amp;quot; REMOTE_SOCKET=&amp;quot;&amp;quot; REMOTE_LIRCD_CONF …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Thu, 27 Jan 2011 22:47:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2011-01-27:/blog/apple-linux-remote.html</guid><category>apple</category><category>apple</category><category>linux</category><category>ubuntu</category><category>infrared</category><category>remote</category><category>lirc</category><category>hardware</category></item><item><title>Symbolic linux links</title><link>https://visibilityspots.github.io/blog/symbolic-links.html</link><description>&lt;p&gt;It's rather simple, but I used to look for it a while when writing my first bash/python scripts. Wanted to typing in one command so I would need to type in every time the whole path to my newly written script.&lt;/p&gt;
&lt;p&gt;That way routine tasks could be called much faster and easier. This can be done by creating a symlink to your /usr/bin directory:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ln -s /path/to/your/script /usr/bin/nameOfTheOverallCommmandYouWantToUseForYourScript
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 10 Feb 2010 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2010-02-10:/blog/symbolic-links.html</guid><category>linux</category><category>/usr/bin/</category><category>link</category><category>linux</category><category>symbolic</category><category>terminal</category></item><item><title>Permissions website</title><link>https://visibilityspots.github.io/blog/web-permissions.html</link><description>&lt;p&gt;The most recommended permissions for files and directories on the web are 0755 and 0644. If you have shell access to your webserver you can set those permissions using those commands:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
find -type d -print0 | xargs -0 chmod 755
find -type f -print0 | xargs -0 chmod 644
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 09 Feb 2010 18:08:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2010-02-09:/blog/web-permissions.html</guid><category>security</category><category>hosting</category><category>linux</category><category>online</category><category>permissions</category><category>shell</category><category>web</category><category>security</category></item><item><title>Conky</title><link>https://visibilityspots.github.io/blog/conky.html</link><description>&lt;p&gt;To monitor the different resources of my local system I use conky. After you installed the conky software you can start with the configuration of it.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ apt-get install conky conky-colors
&lt;/pre&gt;
&lt;p&gt;After I adapted the configuration my desktop became like this:&lt;/p&gt;
&lt;a class="reference external image-reference" href="images/conky/desktop.png"&gt;&lt;img alt="Desktop image" src="images/conky/desktop.png" /&gt;&lt;/a&gt;
&lt;p&gt;At the left side there is a pane which only monitors my system resources. The config file for it, &lt;a class="reference external" href="http://www.visibilityspots.com/documents/conky/conkyrc"&gt;conkyrc&lt;/a&gt; should be placed in your home directory as a hidden file (naming it .conkyrc).&lt;/p&gt;
&lt;p&gt;When you now type in conky in your terminal, you should see appearing the pane on your desktop:&lt;/p&gt;
&lt;a class="reference external image-reference" href="images/conky/conky.png"&gt;&lt;img alt="Left panel" src="images/conky/conky.png" /&gt;&lt;/a&gt;
&lt;p&gt;On the right bottom I created an rss …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 30 Dec 2009 14:18:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2009-12-30:/blog/conky.html</guid><category>linux</category><category>conky</category><category>conky-colors</category><category>monitor</category><category>ubuntu</category><category>karmic</category><category>linux</category></item><item><title>Showing birthdays using php</title><link>https://visibilityspots.github.io/blog/birthday-script.html</link><description>&lt;p&gt;For our local scouting group it seemed nice to write a birthday script which displays for every member on the day of his/her birthday the name and age on our homepage.&lt;/p&gt;
&lt;p&gt;Something like &amp;quot;We wish XXX a happy # anniversary!'&lt;/p&gt;
&lt;p&gt;To accomplish this I wrote a php script which gets the data of our members from a mysql db and shows the messages on the right day on our website. In the meantime also an automatic mail will be send to the person with some sort of 'personal' message.&lt;/p&gt;
&lt;p&gt;database connection (db_connectPear.php)&lt;/p&gt;
&lt;pre class="code php literal-block"&gt;
&lt;span class="x"&gt;&amp;lt; ?php
$dsn = array(
 'phptype' =&amp;gt; 'mysql',
 'username' =&amp;gt; 'DBUSERNAME' …&lt;/span&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 30 Dec 2009 11:27:00 +0100</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2009-12-30:/blog/birthday-script.html</guid><category>php</category><category>MySQL</category><category>php</category><category>scouts</category><category>script</category><category>birthdays</category></item></channel></rss>