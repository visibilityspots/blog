<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>visibilityspots - puppet</title><link>https://visibilityspots.github.io/blog/</link><description>Linux &amp; Open-Source enthusiast | Scouting | Longboarding</description><lastBuildDate>Sat, 10 Oct 2015 23:00:00 +0200</lastBuildDate><item><title>Vagrant puppet setup</title><link>https://visibilityspots.github.io/blog/vagrant-puppet-setup.html</link><description>&lt;p&gt;We at &lt;a href="https://inuits.eu"&gt;Inuits&lt;/a&gt; are using vagrant for a lot of use cases, neither you are a developer or a sysadmin you for sure will walk into it. Me, myself I do use it merely to automate the many different use cases asked by various projects. It took some time to get myself organized with this pretty nifty piece of software.&lt;/p&gt;
&lt;p&gt;In the beginning I used it with the default virtualization provider &lt;a href="https://virtualbox.org"&gt;virtualbox&lt;/a&gt; later on I switched to &lt;a href="https://visibilityspots.github.io/blog/vagrant-setup.html"&gt;lxc&lt;/a&gt; containers instead. By using those containers I already gained on performance. Spinning up and down new containers to test if an application …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Sat, 10 Oct 2015 23:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2015-10-10:/blog/vagrant-puppet-setup.html</guid><category>puppet</category><category>vagrant</category><category>rsync</category><category>puppetmaster</category><category>puppetserver</category><category>development</category><category>setup</category></item><item><title>Ansible orchestration</title><link>https://visibilityspots.github.io/blog/ansible-orchestration.html</link><description>&lt;p&gt;I do use &lt;a href="https://docs.puppetlabs.com/#puppetpuppet"&gt;puppet&lt;/a&gt; as our main configuration management tool. Together with &lt;a href="https://docs.puppetlabs.com/#puppetdbpuppetdblatest"&gt;puppetdb&lt;/a&gt; all our services are automatically configured from bottom to top.&lt;/p&gt;
&lt;p&gt;And it rocks, getting automated as much as possible it is like easy as hell to get a server up and running. The only feature it lacked in my opinion is orchestration. I do know about &lt;a href="http://puppetlabs.com/mcollective"&gt;collective&lt;/a&gt; which is made for this purpose.&lt;/p&gt;
&lt;p&gt;Only it's yet again using an agent which fails from time to time and eating resources which can be avoided. It's the same reason I don't use the puppet agent daemon but trigger puppet …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Tue, 21 Oct 2014 23:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2014-10-21:/blog/ansible-orchestration.html</guid><category>puppet</category><category>ansible</category><category>orchestration</category><category>tool</category><category>puppet</category><category>dynamic</category><category>inventory</category><category>puppetdb</category></item><item><title>Upgrade to puppet 3.3.0</title><link>https://visibilityspots.github.io/blog/puppet-3-upgrade.html</link><description>&lt;p&gt;I finally got to the point where I upgraded a whole puppet infrastructure from puppet 2.6.x to the last stable version of puppet, &lt;a class="reference external" href="http://docs.puppetlabs.com/puppet/3/reference/release_notes.html"&gt;3.3.0&lt;/a&gt;. And after finding out the way to go it was surprisingly easy and no big issues came across.&lt;/p&gt;
&lt;p&gt;One of the main reasons to upgrade was to start using the latest version of foreman, were we used 0.4, so we can start provisioning our own development vm's with some fancy cloud solution like for example &lt;a class="reference external" href="http://cloudstack.apache.org/"&gt;cloudstack&lt;/a&gt; using our production puppet tree.&lt;/p&gt;
&lt;p&gt;Before the upgrade we had the puppet-client &amp;amp; server (2.6 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Fri, 20 Sep 2013 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2013-09-20:/blog/puppet-3-upgrade.html</guid><category>puppet</category><category>puppet</category><category>upgrade</category><category>3.3.0</category><category>2.6.x</category><category>issues</category><category>foreman</category><category>passenger</category><category>puppetdb</category></item><item><title>Puppet sslv3 alert certificate revoked</title><link>https://visibilityspots.github.io/blog/puppet-revoked-certificate.rst.html</link><description>&lt;p&gt;I started the day with ssl issues using puppet. Last week I cleaned 2 hosts in our tree using the puppet command&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# puppet node clean [hostname]
&lt;/pre&gt;
&lt;p&gt;on the puppetmaster. I did this to clean out the stored configs for those nodes.&lt;/p&gt;
&lt;p&gt;But I didn't realized this also cleaned out the ssl certificates for those clients. So I started the new week with this uncomfortable issue:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[root&amp;#64;agent ~]# puppet agent --test err: Could not retrieve catalog from remote server: SSL_connect returned=1 errno=0 state=SSLv3 read server session ticket A: sslv3 alert certificate revoked warning: Not using cache on …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Mon, 08 Oct 2012 11:22:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-10-08:/blog/puppet-revoked-certificate.rst.html</guid><category>puppet</category><category>certificate</category><category>continuous integration</category><category>Linux</category><category>puppet</category><category>revoke</category><category>sign</category><category>ssl</category></item><item><title>Puppet module mumble-server</title><link>https://visibilityspots.github.io/blog/puppet-mumble.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://mumble.sourceforge.net/"&gt;Mumble&lt;/a&gt; is an open source, low-latency, high quality voice chat software primarily intended for use while gaming.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://puppetlabs.com/"&gt;Puppet&lt;/a&gt; is a tool designed to manage the configuration of Unix-like and Microsoft Windows systems decoratively.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/visibilityspots/puppet-mumble"&gt;puppet-mumble&lt;/a&gt; module installs a mumble server (version 1.2.3) automatically on a CentOS 6.x machine using the puppet software based on &lt;a class="reference external" href="http://mumble.sourceforge.net/Install_CentOS5"&gt;mumble-documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The module needs a repository which contains the &lt;a class="reference external" href="http://www.visibilityspots.com/repos/repoview/mumble-server.html"&gt;mumble-server&lt;/a&gt; package. I distribute this package on my own &lt;a class="reference external" href="http://www.visibilityspots.com/repos/repoview/"&gt;visibilityspots&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;Using puppet this will create the necessary mumble user and group and will configure the mumble-server using your desired settings, like username, password …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan</dc:creator><pubDate>Wed, 04 Apr 2012 15:31:00 +0200</pubDate><guid isPermaLink="false">tag:visibilityspots.github.io,2012-04-04:/blog/puppet-mumble.html</guid><category>puppet</category><category>centOS</category><category>Linux</category><category>module</category><category>mumble</category><category>mumble-server</category><category>open-source</category><category>puppet</category></item></channel></rss>